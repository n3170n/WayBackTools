#!/usr/bin/python3

from urllib.parse import urlparse
import sys


def manual():
        print('''
 WayBack Toolkit 0.1.0 

 Parameters:
         -tr  - Generate tree from wayback file
         -o   - Write tree in file
         -g   - Generate wordlist dirs for brute
         -h   - Show manual

 Example for using: 
         cat links.txt | waybtools -tr                   - show tree in terminal
         cat links.txt | waybtools -tr -o output.txt     - show tree and write in file
         cat links.txt | waybtools -tr -g wordlist.txt   - show tree and generate wordlist

 You can add the script to your local bash directory for easy using
         cp /path/to/file/waybtools /usr/local/bin/waybtools
         sudo chmod +xr /usr/local/bin/waybtools
''')

def printName():
    print(f' WayBack Toolkit 0.1.0')

def tree(url_list):
    url_tree = {}
    for url in url_list:
        parts = urlparse(url)
        current_node = url_tree
        site = parts.scheme + "://" + parts.netloc
        needed_parse = parts.path.split('/')
        needed_parse.insert(0, site)
        for part in needed_parse:
            if part:
                current_node = current_node.setdefault(part, {})
    return url_tree

def startActivity(sArgs):
    printName()
    inpd = sys.stdin.read().strip()
    inpd = inpd.split("\n")
    if (len(inpd) == 1) and (inpd[0] == ''):
        print(' \033[35m[*]\033[0m Start Job')
        print(' \033[31m[!]\033[0m Your File is enpty. Aborting...')
        print(' \033[35m[*]\033[0m End Job')
        return False
    paramDict = dict.fromkeys(MAIN_COMMANDS,False)

    for i in MAIN_COMMANDS:
        if (i in sArgs) and (i in ['-o', '-g']):
            paramDict[i] = open(sArgs[sArgs.index(i)+1], 'w', encoding='utf-8')
        elif (i == "-tr") and (i in sArgs):
            paramDict[i] = True
    result = tree(inpd)
    print(' \033[35m[*]\033[0m Start Job')
    Activity(dArgs=paramDict, uTree=result)
    print(' \033[35m[*]\033[0m End Job')
    return True

def Activity(dArgs, uTree, indent=0, linklist=''):
    for key, value in uTree.items():
        if indent == 0:
            linklist = key + "/"
            if dArgs['-tr'] == True:
                print(' \033[34m[*] \033[0m' + linklist)
            if dArgs['-o'] != False:
                dArgs['-o'].write('[*] ' + linklist + '\n')
            if dArgs['-g'] != False:
                if (len(value) != 0):
                    dArgs['-g'].write(linklist+'\n')
            if value:
                Activity(uTree=value, indent=indent + 4, linklist=linklist, dArgs=dArgs)
        else:
            if dArgs['-tr'] == True:
                print('    ' + ' ' * (indent - 4) + '\033[34m > \033[0m' + key + '   ->   ' + linklist + key + "/")
            if dArgs['-o'] != False:
                dArgs['-o'].write('    ' + ' ' * (indent - 4) + ' > ' + key + '   ->   ' + linklist + key + "/"+'\n')
            if dArgs['-g'] != False:
                if (len(value) != 0):
                    dArgs['-g'].write(linklist + key + '\n')
            if value:
                Activity(uTree=value, indent=indent + 4, linklist=linklist + key + '/', dArgs=dArgs)

def main():
    args = sys.argv[1:]
    if len(args) == 0:
        manual()
        return False
    else:
        try:
            if "-h" in args:
                manual()
            else:
                startActivity(sArgs=args)
        except:
            print(' \033[31m[!]\033[0m Something went wrong. Try -h')
            return False


if __name__ == "__main__":
    MAIN_COMMANDS = ['-tr', '-o', '-h', '-g']
    main()
